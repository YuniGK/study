1장
- 라이브러리
	-> 개발에 필요한 기능을 모아놓은 코드의 모음

- 프레임워크
	-> 개발을 수월하게 하기 위한 개발 환경

2장
- IoC
	-> 제어의 역전
	다른 객체를 직접 생성, 제어하는 것이 아닌 외부에서 관리하는 객체를 가져와 사용

	예) public class A {
		b = new B()
	}
	=> 클래스 A가 B객체를 직접 만들어 사용
-> 객체의 생성과 관리를 개발자가 아니라 프레임워크가 대신

- DI
	-> 의존성 주입
	어떤 클래스가 다른 클래스에 의존

	예) public class A {
		@Autowird
		B b;
	}
	=> 클래스 A가 B개체를 직접 만드는 것이 아닌, 스프링 컨테이너가 생성해서 주입
-> 외부에서 객체를 주입받아 사용

- AOP
	-> 관점 지향 프로그래밍
	관심 기준으로 모듈화하는 것
-> 프로그램을 할 때, 핵심 관점과 부가 관점을 나누어서 개발

- PSA
-> 어느 기술을 사용하던 일관된 방식으로 처리


