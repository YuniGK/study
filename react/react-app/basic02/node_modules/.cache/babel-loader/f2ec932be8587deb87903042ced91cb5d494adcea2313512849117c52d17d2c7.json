{"ast":null,"code":"var _jsxFileName = \"/Users/yunkim/Downloads/study/study/react/react-app/basic02/src/App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n//터미널의 WARNING를 안뜨게 해준다.\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let text = 'text';\n\n  /* \n  자료를 잠깐 보관하고 싶을 경우 state \n  -> 자주 변경될 거 같은 내용에서 적용한다.\n  (변동시 자동으로 html에 반영되게 만들고 싶을 때)\n  a - state 사용시 / b - state 변경을 도와주는\n  */\n  let [a, b] = useState('텍스트!');\n  let [textBox, textChange] = useState(['텍스트01', '텍스트02', '텍스트03']);\n  let [count, clickPlus] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"/* JSX */\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'red',\n          fontSize: '16px'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \"/* \\uAE30\\uC874 state == \\uC2E0\\uADDC state\\uC758 \\uACBD\\uC6B0 \\uBCC0\\uACBD\\uC744 \\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4. */\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          let copyText = [...textBox];\n          copyText[0] = 'text01';\n          textChange(copyText);\n        },\n        children: \"\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: textBox[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: textBox[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: textBox[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => clickPlus(count + 1),\n          children: \"\\uBC84\\uD2BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n/* \n컴포넌트를 사용시 좋을 때,\n  반복적인 html\n  큰 페이지\n  자주변경되는 것들 \n\n컴포넌트 만들기 - 다른 함수 밖에 선언한다.\n첫글자는 대문자로 선언한다.\nreturn() 안에 html을 넣는다. - 하나의 태그로 시작해서 하나의 태그로 끝난다.\n\n<div></div>\n<div></div>\n두개의 div가 있을 경우 오류가 발생한다.\n\n해경방법 \n<div>\n  <div></div>\n  <div></div>\n</div>\n\n또는\n\n<>\n  <div></div>\n  <div></div>\n</>\n\nfunction Modal(){\n  return(\n    <div className='modal'>\n      <h2>제목</h2>\n      <p>내용</p>\n    </div>\n  )\n}\n*/\n//let Modal = () => {\n_s(App, \"c/yIA7pi+On1A1NoZ/9i8YMFVcU=\");\n_c = App;\nconst Modal = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Modal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","text","a","b","textBox","textChange","count","clickPlus","className","children","style","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","copyText","Modal","_c","_c2","$RefreshReg$"],"sources":["/Users/yunkim/Downloads/study/study/react/react-app/basic02/src/App.js"],"sourcesContent":["/* eslint-disable */ \n//터미널의 WARNING를 안뜨게 해준다.\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  let text = 'text';\n\n  /* \n  자료를 잠깐 보관하고 싶을 경우 state \n  -> 자주 변경될 거 같은 내용에서 적용한다.\n  (변동시 자동으로 html에 반영되게 만들고 싶을 때)\n  a - state 사용시 / b - state 변경을 도와주는\n  */\n  let [a, b] = useState('텍스트!');\n  let [textBox, textChange] = useState(['텍스트01', '텍스트02', '텍스트03']);\n  let [count, clickPlus] = useState(0);\n\n  return (\n    <div className=\"App\">\n      /* JSX */\n      <div className='nav'>\n        <h3 style={{color: 'red', fontSize : '16px'}}>{text}</h3>\n\n        <h4>{a}</h4>\n        \n        /* 기존 state == 신규 state의 경우 변경을 하지 않는다. */\n        <button onClick={()=>{\n          let copyText = [...textBox];\n          copyText[0] = 'text01';\n\n          textChange(copyText);\n        }}>글 수정</button>\n\n        <h4>{textBox[0]}</h4>\n        <h4>{textBox[1]}</h4>\n        <h4>{textBox[2]}</h4>\n\n        <h4><span onClick={ () => clickPlus( count+1 ) }>버튼</span> {count}</h4>\n      \n        <Modal></Modal>\n        <Modal/>\n      </div>\n    </div>\n  );\n}\n\n/* \n컴포넌트를 사용시 좋을 때,\n  반복적인 html\n  큰 페이지\n  자주변경되는 것들 \n\n컴포넌트 만들기 - 다른 함수 밖에 선언한다.\n첫글자는 대문자로 선언한다.\nreturn() 안에 html을 넣는다. - 하나의 태그로 시작해서 하나의 태그로 끝난다.\n\n<div></div>\n<div></div>\n두개의 div가 있을 경우 오류가 발생한다.\n\n해경방법 \n<div>\n  <div></div>\n  <div></div>\n</div>\n\n또는\n\n<>\n  <div></div>\n  <div></div>\n</>\n\nfunction Modal(){\n  return(\n    <div className='modal'>\n      <h2>제목</h2>\n      <p>내용</p>\n    </div>\n  )\n}\n*/\n//let Modal = () => {\nconst Modal = () => {\n  return(\n    <div className='modal'>\n      <h2>제목</h2>\n      <p>내용</p>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}